同一个进程内的不同线程资源是共享的
在上写文切换上，线程比进程快
对于cpu密集型的任务，在python中使用进程好
对于io密集型的任务，使用多线程性能较好，主要和python中的gil锁有关（全局解释器锁，在同一个时刻仅只有一个线程在执行，但是在某种情况下比如io阻塞的情况下会暂时释放锁）
进程：正在运行的应用程序，程序一旦开始运行就是进程，是cpu资源分配的最小单元，每个进程都有自己的资源空间，互不影响
线程：依托在进程中，是cpu调度的最小单元，同一个进程中的不同线程是共享资源空间，所以不同线程之间切换资源消耗较小，但是由于是共享资源，在对同一个资源进行处理的时候，容易因为代码不当，出现死锁等情况

